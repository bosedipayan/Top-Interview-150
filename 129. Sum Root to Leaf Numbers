/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void getLeafs(TreeNode* root, vector<int> &v, string str)
    {
        if(root == NULL)
        {
            return;
        }
        
        str+=to_string(root->val);
        if(!root->left && !root->right)
        {
            v.push_back(stoi(str));
        }
        
        getLeafs(root->left, v, str);
        getLeafs(root->right, v, str);
    }
    int sumNumbers(TreeNode* root) {
        vector<int> v;
        
        string str="";
        getLeafs(root, v, str);
        
        int ans=0;
        for(int i=0;i<v.size();i++)
        {
            ans+=v[i];
        }
        return ans;
    }
};
